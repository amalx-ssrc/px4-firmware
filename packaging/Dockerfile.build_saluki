# px4-firmware builder for PixHawk4
FROM ros:galactic-ros-base as px4-cross-builder

ENV LANG C.UTF-8
ENV LANGUAGE C.UTF-8
ENV LC_ALL C.UTF-8
ENV RMW_IMPLEMENTATION rmw_fastrtps_cpp

RUN echo "deb [trusted=yes] https://ssrc.jfrog.io/artifactory/ssrc-debian-public-remote focal fog-sw" >> /etc/apt/sources.list.d/fogsw-latest.list

RUN apt-get update && apt-get install -y --no-install-recommends \
    git build-essential wget cmake lsb-core ninja-build \
    python3-empy python3-toml python3-numpy python3-genmsg \
    python3-packaging python3-jinja2 python3-yaml openjdk-11-jre \
    fast-dds-gen \
    genromfs xxd curl \
    python3-nacl python3-pip \
    ros-galactic-fastrtps \
    ros-galactic-rmw-fastrtps-cpp \
    && pip3 install kconfiglib jsonschema \
    && rm -rf /var/lib/apt/lists/*

RUN mkdir /tools

WORKDIR tmp

RUN curl -LOs https://static.dev.sifive.com/dev-tools/freedom-tools/v2020.12/riscv64-unknown-elf-toolchain-10.2.0-2020.12.8-x86_64-linux-ubuntu14.tar.gz && \
    tar xf riscv64-unknown-elf-toolchain-10.2.0-2020.12.8-x86_64-linux-ubuntu14.tar.gz -C /tools

ENV PATH=/tools/riscv64-unknown-elf-toolchain-10.2.0-2020.12.8-x86_64-linux-ubuntu14/bin:$PATH

WORKDIR /build

COPY . .

RUN . /opt/ros/galactic/setup.sh \
    && SIGNING_TOOL=Tools/cryptotools.py make ssrc_saluki-v1_default \
    && SIGNING_TOOL=Tools/cryptotools.py make ssrc_saluki-v1_bootloader

WORKDIR /artifacts

ARG VERSION="0.0.0-0"

RUN cp /build/build/ssrc_saluki-v1_default/ssrc_saluki-v1_default.px4 /artifacts/ssrc_saluki-v1_default-${VERSION}.px4 \
    && cp /build/build/ssrc_saluki-v1_bootloader/ssrc_saluki-v1_bootloader.elf /artifacts/ssrc_saluki-v1_bootloader-${VERSION}.elf


FROM scratch
COPY --from=px4-cross-builder /artifacts /artifacts
